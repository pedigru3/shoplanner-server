// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  email         String  @unique
  name          String
  avatarUrl     String?
  password_hash String

  shoppingLists ShoppingList[]
  sharedLists   SharedShoppingList[]
  Item          Item[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShoppingList {
  id     String @id @default(uuid())
  userId String
  name   String

  market            Market?              @relation(fields: [marketId], references: [id])
  users             User                 @relation(fields: [userId], references: [id])
  shoppingListItems ShoppingListItem[]
  sharedWith        SharedShoppingList[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  marketId  String?
}

model SharedShoppingList {
  id             String  @id @default(uuid())
  shoppingListId String
  userId         String
  authorized     Boolean @default(false)

  shoppingList ShoppingList @relation(fields: [shoppingListId], references: [id])
  user         User         @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShoppingListItem {
  id             String  @id @default(uuid())
  shoppingListId String
  itemId         String
  priceId        String?
  quantity       Decimal
  forecast       Decimal

  item         Item         @relation(fields: [itemId], references: [id])
  shoppingList ShoppingList @relation(fields: [shoppingListId], references: [id])
  currentPrice Price?       @relation(fields: [priceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id       String @id @default(uuid())
  userId   String
  name     String
  category String

  shoppingListItems ShoppingListItem[]
  prices            Price[]
  user              User               @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Price {
  id     String  @id @default(uuid())
  itemId String
  value  Decimal

  item             Item               @relation(fields: [itemId], references: [id])
  ShoppingListItem ShoppingListItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Market {
  id           String         @id @default(uuid())
  title        String
  description  String?
  phone        String?
  latitude     Decimal
  longitude    Decimal
  ShoppingList ShoppingList[]

  @@map("markets")
}
